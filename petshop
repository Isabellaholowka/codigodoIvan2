package br.com.petshop;

import java.util.ArrayList;
import java.util.Scanner;

// Classe principal que gerencia o sistema de cadastro de animais
public class petshop {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ArrayList<Animal> animais = new ArrayList<>(); // Lista para armazenar os animais cadastrados
        int opcao = 0; // Inicializa a variável para evitar erro

        do {
            // Exibição do menu de opções
            System.out.println("\n=== MENU ===");
            System.out.println("1 - Cadastrar Cachorro");
            System.out.println("2 - Cadastrar Gato");
            System.out.println("3 - Cadastrar Hamster");
            System.out.println("4 - Exibir Animais");
            System.out.println("5 - Sair");
            System.out.print("Escolha uma opção: ");
            
            if (scanner.hasNextInt()) { // Garante que o usuário digitou um número
                opcao = scanner.nextInt();
                scanner.nextLine(); // Consumir a quebra de linha
            } else {
                System.out.println("Opção inválida! Digite um número.");
                scanner.nextLine(); // Limpa entrada inválida
                continue;
            }

            switch (opcao) {
                case 1:
                    // Cadastro de um cachorro
                    System.out.print("Nome do cachorro: ");
                    String nomeCachorro = scanner.nextLine();
                    System.out.print("Idade do cachorro: ");
                    int idadeCachorro = scanner.nextInt();
                    scanner.nextLine(); // Consumir a quebra de linha
                    System.out.print("Raça do cachorro: ");
                    String raca = scanner.nextLine();
                    animais.add(new cachorro(nomeCachorro, idadeCachorro, raca));
                    System.out.println("Cachorro cadastrado com sucesso!");
                    break;
                    
                case 2:
                    // Cadastro de um gato
                    System.out.print("Nome do gato: ");
                    String nomeGato = scanner.nextLine();
                    System.out.print("Idade do gato: ");
                    int idadeGato = scanner.nextInt();
                    scanner.nextLine(); // Consumir a quebra de linha
                    System.out.print("Cor do pelo do gato: ");
                    String corPelo = scanner.nextLine();
                    animais.add(new gato(nomeGato, idadeGato, corPelo));
                    System.out.println("Gato cadastrado com sucesso!");
                    break;

                case 3:
                    // Cadastro de um hamster
                    System.out.print("Nome do hamster: ");
                    String nomeHamster = scanner.nextLine();
                    System.out.print("Idade do hamster: ");
                    int idadeHamster = scanner.nextInt();
                    scanner.nextLine(); // Consumir a quebra de linha
                    System.out.print("Cor do pelo do hamster: ");
                    String corHamster = scanner.nextLine();
                    animais.add(new hamster(nomeHamster, idadeHamster, corHamster));
                    System.out.println("Hamster cadastrado com sucesso!");
                    break;
                    
                case 4:
                    // Exibição dos animais cadastrados
                    System.out.println("\n=== Lista de Animais Cadastrados ===");
                    for (Animal animal : animais) {
                        animal.exibirInfo();
                        System.out.println("------------------------");
                    }
                    break;
                    
                case 5:
                    System.out.println("Encerrando o programa...");
                    break;
                    
                default:
                    System.out.println("Opção inválida! Tente novamente.");
            }
        } while (opcao != 5);

        scanner.close(); // Fechando o scanner para evitar vazamento de memória
    }
}
